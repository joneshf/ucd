:- ['simpsons.swipl'].
:- ['sets.swipl'].
:- ['allsuch.swipl'].
:- ['evaluation.swipl'].
:- ['doublecolon.swipl'].
:- ['fulldisplay.swipl'].


english([bart ], [nom,cls], 
	[R :: allsuch(X,(allsuch(Y,bearer(Y,[bart]),Z),includes(X,Z)),R)]).

english([homer], [nom,cls], 
	[R :: allsuch(X,(allsuch(Y,bearer(Y,[homer]),Z),includes(X,Z)),R)]).

english([lisa ], [nom,cls], 
	[R :: allsuch(X,(allsuch(Y,bearer(Y,[lisa]),Z),includes(X,Z)),R)]).

english([marge], [nom,cls], 
	[R :: allsuch(X,(allsuch(Y,bearer(Y,[marge]),Z),includes(X,Z)),R)]).

english([is], [vbl,wrd,cop,fin], _).
english([by], [prp,wrd,015], _).

english([annoys ], [vbl,wrd,act,fin], [R :: allsuch([X,Y], annoys(X,Y), R)]).
english([annoyed], [vbl,wrd,act,pap], [R :: allsuch([X,Y], annoys(X,Y), R)]).

english(SO, [vbl,wrd,pas,pap], [R :: allsuch([Y,X], Z, R)]):-
	english(SO, [vbl,wrd,act,pap], [R1 :: allsuch([X,Y], Z, R1)]).

english(SO,[nom,cls,SUBCAT], ME):-
	english(SO1,[prp,wrd,SUBCAT],  _),
	english(SO2,[nom,cls       ], ME),
	append(SO1,SO2,SO).

english(SO, [vbl,phr,act,INF], [R :: 
	allsuch(X,(S1,S2,member([X,_],R1), 
	allsuch(Y,member([X,Y],R1),Z),member(Z,R2)),R)]):-
		english(SO1, [vbl,wrd,act,INF], [R1 :: S1]),
		english(SO2, [nom,cls        ], [R2 :: S2]),
		append(SO1,   SO2, SO).

english(SO, [vbl,phr,pas,pap], [R :: 
	allsuch(X,(S1,S2,member([X,_],R1), 
	allsuch(Y,member([X,Y],R1),Z),member(Z,R2)),R)]):-
		english(SO1, [vbl,wrd,pas,pap], [R1 :: S1]),
		english(SO2, [nom,cls,015    ], [R2 :: S2]),
		append(SO1,   SO2, SO).

english(SO, [vbl,phr,cop,INF], ME):-
		english(SO1, [vbl,wrd,cop,INF],  _),
		english(SO2, [vbl,phr,pas,pap], ME),
		append(SO1, SO2, SO).

english(SO, [vbl,cls], [R :: evaluation((S1,S2,member(R2,R1)),R)]):-
	english(SO1, [nom,cls      ], [R1 :: S1]),
	english(SO2, [vbl,phr,_,fin], [R2 :: S2]),
	append( SO1,  SO2,  SO).


annoys(homer,marge).
annoys(bart,lisa).
