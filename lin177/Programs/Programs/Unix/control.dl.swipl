:- ['simpsons.ii.swipl'].
:- ['sets.swipl'].
:- ['allsuch.swipl'].
:- ['evaluation.swipl'].
:- ['doublecolon.swipl'].
:- ['fulldisplay.swipl'].


english([homer|A]-A, [nom,wrd,prp    ], [R :: bearer(R,[homer])]).
english([marge|A]-A, [nom,wrd,prp    ], [R :: bearer(R,[marge])]).

english([to|A]-A, [prp,wrd,dat    ], [R :: allsuch([X,Y],to(X,Y),R)]).

english([drive|A]-A, [vbl,wrd,001,bse], [R :: allsuch(X,drive(X),R)]).

english([promises|A]-A, [vbl,wrd,002,fin], [R::allsuch([X,Y,Z],promise( X,Y,Z),R)]).

english([persuades|A]-A, [vbl,wrd,002,fin], [R::allsuch([X,Y,Z],persuade(X,Y,Z),R)]).

english(SO, [nom,phr,prp], [R :: allsuch(X,Y,R)]):-
	english(SO, [nom,wrd,prp], [X :: Y]).

english(SO, [nom,cls], [R :: allsuch(X,(Y,includes(X,Z)), R)]):-
	english(SO, [nom,phr,prp], [Z :: Y]).

english(SO, [vbl,phr,SUBCAT], ME):-
	english(SO,[vbl,wrd,001,SUBCAT], ME).

english(A-C,[vbl,phr,inf],ME):-
		english(A-B,[prp,wrd,dat],_),
		english(B-C,[vbl,phr,bse],ME).

english(A-D, [vbl,phr,INFL], [R :: 
	allsuch(X,(S1,S2,member([X,_,_],R1), 
	allsuch(Y,member([X,Y,_],R1),Z),member(Z,R2),
	member([X,Y,W],R1)),R)]):-
		english(A-B, [vbl,wrd,002,INFL], [R1 :: S1]),
		english(B-C, [nom,cls         ], [R2 :: S2]),
		english(C-D, [vbl,phr,inf     ], [R3 :: allsuch(_,W,R3)]).

english(A-C, [vbl,cls], [R :: evaluation((S1,S2,member(R2,R1)),R)]):-
	english(A-B, [nom,cls    ], [R1 :: S1]),
	english(B-C, [vbl,phr,fin], [R2 :: S2]).
