
TESTING C_s

testing: c_numbers(Number)
Number = 140

Number = 141

Number = 142

Number = 240

Number = 150

Number = 122

Number = 60

Number = 20

testing: c_pl(Number)
testing: c_notpl(Number)
testing: c_inst60(List_of_60_Instructors)
testing: c_inst60_sorted(Sorted_List_of_60_Instructors)
testing: c_inst20(List_of_20_Instructors)
testing: c_inst20_sorted(Sorted_List_of_20_Instructors)
testing: c_inst_sorted(60,Sorted_List_of_Instructors)
testing: c_inst_sorted(20,Sorted_List_of_Instructors)
testing: c_inst_sorted(140,Sorted_List_of_Instructors)
testing: c_single_inst(Number)
testing: c_multi_inst(Number)
testing: c_exclusive(levitt,Number)
testing: c_exclusive(pandey,Number)
testing: c_exclusive(rogaway,Number)
testing: c_exclusive(olsson,Number)
testing: c_12_inst_1or(Number)
testing: c_12_inst_2wo(Number)

TESTING DELETE

testing: delete([1],1,Z)
Z = []

testing: delete([1],2,Z)
Z = [1]

testing: delete([1,2,3],2,Z)
Z = [1,3]

testing: delete([1,2,3],3,Z)
Z = [1,2]

testing: delete([2,[1]],[1],Z)
Z = [2]

testing: delete([3,4,5],[1,2],Z)
Z = [3,4,5]

testing: delete([3,[1,2],5],[1,2],Z)
Z = [3,5]


TESTING DELETE QUESTION

testing: delete_question(Answer)

TESTING SORTAPPEND

testing: sortappend([],[],Z)
testing: sortappend([1],[2],Z)
testing: sortappend([2],[1,3],Z)
testing: sortappend([2],[1,2,3],Z)
testing: sortappend([1,3,5],[2,4,6],Z)
testing: sortappend([1,[4],3,[],[4]],[2,[4]],Z)
testing: sortappend([1,3,[5]],[2,[4]],Z)
testing: sortappend([1,[],[4,1],[5]],[2,[4]],Z)

TESTING DISTRIBUTE

testing: distribute(aaaa,[],Z)
testing: distribute(aaaa,[b],Z)
testing: distribute(aaaa,[b,c],Z)
testing: distribute(4,[1,2,3],Z)
testing: distribute(99,[11,22,33,44],Z)
